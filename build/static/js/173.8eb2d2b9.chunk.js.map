{"version":3,"sources":["views/apps/explore/Trupee/RefferEarn.js"],"names":["RefferEarn","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRendererFramework","params","className","data","desc","value","completed","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","JSON","stringify","catch","error","console","log","id","this","Fragment","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/173.8eb2d2b9.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Col,\n  Row,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport { Route } from \"react-router-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\nimport axiosConfig from \"../../../../axiosConfig\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass RefferEarn extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n      {\n        headerName: \"User Name\",\n        field: \"desc\",\n        // filter: true,\n        width: 250,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Reffer Code\",\n        field: \"desc\",\n        // filter: true,\n        width: 250,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Affiliate UserName\",\n        field: \"desc\",\n        // filter: true,\n        width: 250,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Membership Name\",\n        field: \"desc\",\n        // filter: true,\n        width: 250,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Start Date\",\n        field: \"desc\",\n        // filter: true,\n        width: 250,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Expiry Date\",\n        field: \"desc\",\n        // filter: true,\n        width: 250,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Status\",\n        field: \"completed\",\n        // filter: completed,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return params.value === \"Active\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.completed}\n            </div>\n          ) : params.value === \"Inactive\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.completed}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 250,\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              {/* <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(\n                        \n                        `/app/about/EditAboutUs/${params.data._id}`\n                      )\n                    }\n                  />\n                )}\n              /> */}\n\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  componentDidMount() {\n    axiosConfig\n      .get(`/admin/allnotification`)\n      .then((response) => {\n        let rowData = response.data.data;\n        JSON.stringify(rowData);\n        this.setState({ rowData });\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig\n      .get(`/admin/deletenotification/${id}`)\n      .then((response) => {\n        console.log(response);\n      });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <React.Fragment>\n        {/* <Breadcrumbs\n          breadCrumbTitle=\"Notification\"\n          breadCrumbParent=\"Forms & Tables\"\n          breadCrumbActive=\"Notification List\"/> */}\n        <Card className=\"overflow-hidden agGrid-card\">\n          <Row className=\"m-2\">\n            <Col>\n              <h1 sm=\"6\" className=\"float-left\">\n                Reffer & Earn List\n              </h1>\n            </Col>\n            {/* <Col>\n              <Route\n                render={({ history }) => (\n                  <Button\n                    className=\" btn btn-danger float-right\"\n                    onClick={() =>\n                      history.push(\"/app/notification/Addnotification\")\n                    }\n                  >\n                    Add Notification\n                  </Button>\n                )}\n              />\n            </Col> */}\n          </Row>\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                    <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {(context) => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nexport default RefferEarn;\n"],"sourceRoot":""}