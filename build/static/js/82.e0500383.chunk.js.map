{"version":3,"sources":["components/@vuexy/autoComplete/AutoCompleteComponent.js","components/@vuexy/autoComplete/AutoCompleteSourceCode.js","components/@vuexy/autoComplete/AutoCompleteBasic.js","components/@vuexy/autoComplete/AutoCompleteAjax.js","components/@vuexy/autoComplete/AutoCompleteSections.js","components/@vuexy/autoComplete/AutoCompleteRender.js","components/@vuexy/autoComplete/AutoCompleteSuggestions.js","components/@vuexy/autoComplete/AutoCompleteLimit.js","components/@vuexy/autoComplete/AutoComplete.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js"],"names":["Autocomplete","props","onSuggestionItemClick","url","e","onSuggestionClick","setState","activeSuggestion","showSuggestions","userInput","currentTarget","innerText","history","push","onSuggestionItemHover","index","onChange","value","target","onInputClick","stopPropagation","onKeyDown","state","filterKey","suggestionList","ReactDOM","findDOMNode","keyCode","length","filteredData","scrollTop","scrollHeight","link","undefined","renderGroupedSuggestion","arr","customRender","map","item","i","className","classnames","active","indexOf","key","onClick","onMouseEnter","renderSuggestion","renderUngroupedSuggestions","suggestions","suggestionLimit","sortSingleData","filter","startCondition","toLowerCase","startsWith","includeCondition","includes","slice","suggestion","renderSuggestions","grouped","filterHeaderKey","sortData","data","searchLimit","Fragment","size","clearInput","val","handleExtenalClick","container","refs","contains","externalClick","focused","openUp","document","body","addEventListener","prevProps","prevState","textInput","this","input","autoFocus","onSuggestionsShown","focus","defaultSuggestions","removeEventListener","suggestionsListComponent","ref","el","component","options","wheelPropagation","type","placeholder","onFocus","onBlur","React","Component","basicExample","sectionExample","ajaxExample","customRenderExample","defaultSuggestionsExample","searchLimitExample","AutoCompleteBasic","activeTab","title","toggleTab","tab","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","CardBody","TabContent","TabPane","tabId","AutoCompleteAjax","axios","get","then","response","autoComplete","AutoCompleteSections","groupTitle","AutoCompleteRender","name","img","img1","img2","img3","img4","img6","img5","src","alt","height","width","AutoCompleteDefaultSuggestions","AutoCompleteSearchLimit","AutoComplete","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","AutoCompleteSuggestions","TabContext","createContext","t","n","util","clone","languages","javascript","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","content","join","g","o","tagName","pop","openedBraces","r","splice","Token","hooks","add","language","tokens","_excluded","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","getClasses","Consumer","_ref"],"mappings":"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","file":"static/js/82.e0500383.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport PropTypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport { history } from \"../../../history\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { AlertTriangle } from \"react-feather\"\nclass Autocomplete extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      activeSuggestion: 0,\n      showSuggestions: false,\n      userInput: \"\",\n      focused: false,\n      openUp: false\n    }\n\n    this.filteredData = []\n    document.body.addEventListener(\"click\", this.handleExtenalClick)\n  }\n\n  // Suggestion Click Event\n  onSuggestionItemClick = (url, e) => {\n    if (this.props.onSuggestionClick) {\n      this.props.onSuggestionClick(e)\n    }\n    this.setState({\n      activeSuggestion: 0,\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText\n    })\n    if (url) history.push(url)\n  }\n\n  // Suggestion Hover Event\n  onSuggestionItemHover = index => {\n    this.setState({ activeSuggestion: index })\n  }\n\n  // Input Change\n  onChange = e => {\n    const userInput = e.currentTarget.value\n    this.setState({\n      activeSuggestion: 0,\n      showSuggestions: true,\n      userInput\n    })\n    if (e.target.value < 1) {\n      this.setState({\n        showSuggestions: false\n      })\n    }\n  }\n\n  // Input Click Event\n  onInputClick = e => {\n    e.stopPropagation()\n  }\n\n  // Input's Keydown Event\n  onKeyDown = e => {\n    const { activeSuggestion, showSuggestions, userInput } = this.state\n    const filterKey = this.props.filterKey\n    let suggestionList = ReactDOM.findDOMNode(this.suggestionList)\n\n    // User pressed the up arrow\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\n      this.setState({ activeSuggestion: activeSuggestion - 1 })\n      if (\n        e.target.value.length > -1 &&\n        suggestionList !== null &&\n        activeSuggestion <= this.filteredData.length / 2\n      ) {\n        suggestionList.scrollTop = 0\n      }\n    }\n\n    // User pressed the down arrow\n    else if (\n      e.keyCode === 40 &&\n      activeSuggestion < this.filteredData.length - 1\n    ) {\n      this.setState({ activeSuggestion: activeSuggestion + 1 })\n\n      if (\n        e.target.value.length > -1 &&\n        suggestionList !== null &&\n        activeSuggestion >= this.filteredData.length / 2\n      ) {\n        suggestionList.scrollTop = suggestionList.scrollHeight\n      }\n    }\n\n    // User Pressed ESC\n    else if (e.keyCode === 27) {\n      this.setState({\n        showSuggestions: false,\n        userInput: \"\"\n      })\n    }\n\n    // User Pressed ENTER\n    else if (e.keyCode === 13 && showSuggestions) {\n      this.onSuggestionItemClick(this.filteredData[activeSuggestion].link, e)\n      this.setState({\n        userInput: this.filteredData[activeSuggestion][filterKey],\n        showSuggestions: false\n      })\n    } else {\n      return\n    }\n\n    // Custom Keydown Event\n    if (\n      this.props.onKeyDown !== undefined &&\n      this.props.onKeyDown !== null &&\n      this.props.onKeyDown\n    ) {\n      this.props.onKeyDown(e, userInput)\n    }\n  }\n\n  // Grouped Suggestions\n  renderGroupedSuggestion = arr => {\n    const { filterKey, customRender } = this.props\n    const {\n      onSuggestionItemClick,\n      onSuggestionItemHover,\n      state: { activeSuggestion, userInput }\n    } = this\n\n    let renderSuggestion = (item, i) => {\n      if (!customRender) {\n        return (\n          <li\n            className={classnames(\"suggestion-item\", {\n              active: this.filteredData.indexOf(item) === activeSuggestion\n            })}\n            key={item[filterKey]}\n            onClick={e => onSuggestionItemClick(item.link, e)}\n            onMouseEnter={() => {\n              this.onSuggestionItemHover(this.filteredData.indexOf(item))\n            }}>\n            {item[filterKey]}\n          </li>\n        )\n      } else if (customRender) {\n        return customRender(\n          item,\n          i,\n          this.filteredData,\n          activeSuggestion,\n          onSuggestionItemClick,\n          onSuggestionItemHover,\n          userInput\n        )\n      } else {\n        return null\n      }\n    }\n\n    return arr.map((item, i) => {\n      return renderSuggestion(item, i)\n    })\n  }\n\n  // Ungrouped Suggestions\n  renderUngroupedSuggestions = () => {\n    const { filterKey, suggestions, customRender, suggestionLimit } = this.props\n    const {\n      onSuggestionItemClick,\n      onSuggestionItemHover,\n      state: { activeSuggestion, userInput }\n    } = this\n\n    this.filteredData = []\n    let sortSingleData = suggestions\n      .filter(i => {\n        let startCondition = i[filterKey]\n            .toLowerCase()\n            .startsWith(userInput.toLowerCase()),\n          includeCondition = i[filterKey]\n            .toLowerCase()\n            .includes(userInput.toLowerCase())\n        if (startCondition) {\n          return startCondition\n        } else if (!startCondition && includeCondition) {\n          return includeCondition\n        } else {\n          return null\n        }\n      })\n      .slice(0, suggestionLimit)\n    this.filteredData.push(...sortSingleData)\n    return sortSingleData.map((suggestion, index) => {\n      if (!customRender) {\n        return (\n          <li\n            className={classnames(\"suggestion-item\", {\n              active: this.filteredData.indexOf(suggestion) === activeSuggestion\n            })}\n            key={suggestion[filterKey]}\n            onClick={e =>\n              onSuggestionItemClick(suggestion.link ? suggestion.link : null, e)\n            }\n            onMouseEnter={() =>\n              this.onSuggestionItemHover(this.filteredData.indexOf(suggestion))\n            }>\n            {suggestion[filterKey]}\n          </li>\n        )\n      } else if (customRender) {\n        return customRender(\n          suggestion,\n          index,\n          this.filteredData,\n          activeSuggestion,\n          onSuggestionItemClick,\n          onSuggestionItemHover,\n          userInput\n        )\n      } else {\n        return null\n      }\n    })\n  }\n\n  // Renders Suggestions\n  renderSuggestions = () => {\n    const { filterKey, grouped, filterHeaderKey, suggestions } = this.props\n    const {\n      renderUngroupedSuggestions,\n      state: { userInput }\n    } = this\n\n    // Checks if suggestions are grouped or not.\n    if (grouped === undefined || grouped === null || !grouped) {\n      return renderUngroupedSuggestions()\n    } else {\n      this.filteredData = []\n      return suggestions.map(suggestion => {\n        let sortData = suggestion.data\n          .filter(i => {\n            let startCondition = i[filterKey]\n                .toLowerCase()\n                .startsWith(userInput.toLowerCase()),\n              includeCondition = i[filterKey]\n                .toLowerCase()\n                .includes(userInput.toLowerCase())\n            if (startCondition) {\n              return startCondition\n            } else if (!startCondition && includeCondition) {\n              return includeCondition\n            } else {\n              return null\n            }\n          })\n          .slice(0, suggestion.searchLimit)\n\n        this.filteredData.push(...sortData)\n        return (\n          <React.Fragment key={suggestion[filterHeaderKey]}>\n            <li className=\"suggestion-item suggestion-title text-primary text-bold-600\">\n              {suggestion[filterHeaderKey]}\n            </li>\n            {sortData.length ? (\n              this.renderGroupedSuggestion(sortData)\n            ) : (\n              <li className=\"suggestion-item no-result\">\n                <AlertTriangle size={15} />{\" \"}\n                <span className=\"align-middle ml-50\">No Result</span>\n              </li>\n            )}\n          </React.Fragment>\n        )\n      })\n    }\n  }\n\n  // Clears Input\n  clearInput = val => {\n    if (this.props.clearInput && !val) {\n      this.setState({\n        userInput: \"\"\n      })\n    }\n  }\n\n  // Closes Suggestions if clicked outside container (On Blur Basically)\n  handleExtenalClick = e => {\n    let { container } = this.refs\n    const { target } = e\n    if (target !== container && !container.contains(target)) {\n      this.setState({\n        showSuggestions: false\n      })\n      if (this.props.externalClick) this.props.externalClick(e)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let textInput = ReactDOM.findDOMNode(this.input)\n    let { autoFocus, onSuggestionsShown, clearInput } = this.props\n    // For searchbar focus\n    if (textInput !== null && autoFocus) {\n      textInput.focus()\n    }\n\n    if (\n      this.props.defaultSuggestions &&\n      prevState.showSuggestions === false &&\n      this.state.focused\n    ) {\n      this.setState({ showSuggestions: true })\n    }\n\n    // Clear Input\n    if (clearInput === false && this.state.userInput.length) {\n      this.setState({\n        userInput: \"\"\n      })\n    }\n\n    // Function on Suggestions Shown\n    if (onSuggestionsShown && this.state.showSuggestions) {\n      onSuggestionsShown(this.state.userInput)\n    }\n\n    if (\n      this.props.defaultSuggestions &&\n      prevState.focused === false &&\n      this.state.focused === true\n    ) {\n      this.setState({ showSuggestions: true })\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.defaultSuggestions && this.state.focused) {\n      this.setState({ showSuggestions: true })\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleExtenalClick)\n  }\n\n  render() {\n    const {\n      onChange,\n      onKeyDown,\n      state: { showSuggestions, userInput, openUp }\n    } = this\n    let suggestionsListComponent\n\n    if (showSuggestions) {\n      suggestionsListComponent = (\n        <PerfectScrollbar\n          className={classnames(\"suggestions-list\", {\n            \"open-up\": openUp\n          })}\n          ref={el => (this.suggestionList = el)}\n          component=\"ul\"\n          options={{ wheelPropagation: false }}>\n          {this.renderSuggestions()}\n        </PerfectScrollbar>\n      )\n    }\n\n    return (\n      <div className=\"vx-autocomplete-container\" ref=\"container\">\n        <input\n          type=\"text\"\n          onChange={e => {\n            onChange(e)\n            if (this.props.onChange) {\n              this.props.onChange(e)\n            }\n          }}\n          onKeyDown={e => onKeyDown(e)}\n          value={userInput}\n          className={`vx-autocomplete-search ${\n            this.props.className ? this.props.className : \"\"\n          }`}\n          placeholder={this.props.placeholder}\n          onClick={this.onInputClick}\n          ref={el => {\n            return (this.input = el)\n          }}\n          onFocus={e => {\n            this.setState({ focused: true })\n          }}\n          autoFocus={this.props.autoFocus}\n          onBlur={e => {\n            // this.onBlur(e)\n            if (this.props.onBlur) this.props.onBlur(e)\n            this.setState({ focused: false })\n          }}\n        />\n        {suggestionsListComponent}\n      </div>\n    )\n  }\n}\n\nexport default Autocomplete\n\nAutocomplete.propTypes = {\n  suggestions: PropTypes.array.isRequired,\n  filterKey: PropTypes.string.isRequired,\n  filterHeaderKey: PropTypes.string,\n  placeholder: PropTypes.string,\n  suggestionLimit: PropTypes.number,\n  grouped: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  onChange: PropTypes.func,\n  onSuggestionsShown: PropTypes.func,\n  onSuggestionItemClick: PropTypes.func\n}\n","import React from \"react\"\n\nexport const basicExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteBasic extends React.Component {\n  state = {\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      }\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete suggestions={this.state.suggestions} \n        className=\"form-control\" \n        filterKey=\"title\" \n        suggestionLimit={4} \n        defaultSuggestions={true}\n      />\n    )}}\n\nexport default AutoCompleteBasic\n`}\n    </code>\n  </pre>\n)\n\nexport const sectionExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteSections extends React.Component {\n  state = {\n    suggestions: [\n      {\n        groupTitle: \"1970s\",\n        data: [\n          {\n            title: \"C\",\n          }\n        ]\n      },\n      {\n        groupTitle: \"1980s\",\n        data: [\n          {\n            title: \"C++\",\n          },\n          {\n            title: \"Perl\",\n          }\n        ]\n      },\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete suggestions={this.state.suggestions} \n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        filterHeaderKey=\"groupTitle\"\n        grouped={true}\n      />\n    )}}\n\nexport default AutoCompleteSections\n`}\n    </code>\n  </pre>\n)\n\nexport const ajaxExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteAjax extends React.Component {\n  state = {\n    suggestions: []\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/autocomplete/data\")\n      .then(response =>\n        this.setState({ suggestions: response.data.autoComplete })\n      )\n  }\n\n  render() {\n    return(\n        <AutoComplete suggestions={this.state.suggestions} \n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        suggestionLimit={4}\n      />\n    )}}\n\nexport default AutoCompleteAjax\n`}\n    </code>\n  </pre>\n)\n\nexport const customRenderExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\nimport img1 from \"../../../assets/img/portrait/small/avatar-s-1.jpg\"\nimport img2 from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\nimport img3 from \"../../../assets/img/portrait/small/avatar-s-3.jpg\"      \nimport img4 from \"../../../assets/img/portrait/small/avatar-s-4.jpg\"      \nimport img5 from \"../../../assets/img/portrait/small/avatar-s-5.jpg\"      \nimport img6 from \"../../../assets/img/portrait/small/avatar-s-6.jpg\"      \n\nclass AutoCompleteRender extends React.Component {\n  state = {\n    suggestions: [\n      {\n        name: \"Jake Shelton\",\n        img: img1\n      },\n      {\n        name: \"Edith Baldwin\",\n        img: img2\n      },\n      {\n        name: \"Jennifer Wolfe\",\n        img: img3\n      },\n      {\n        name: \"Emily Washington\",\n        img: img4\n      },\n      {\n        name: \"Heather Green\",\n        img: img6\n      },\n      {\n        name: \"Brian Moore\",\n        img: img5\n      }\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete\n          suggestions={this.state.suggestions}\n          className=\"form-control\"\n          filterKey=\"name\"\n          customRender={(\n            suggestion,\n            i,\n            filteredData,\n            activeSuggestion,\n            onSuggestionItemClick,\n            onSuggestionItemHover\n          ) => (\n            <li\n              className={classnames(\"suggestion-item\", {\n                active:\n                  filteredData.indexOf(suggestion) === activeSuggestion\n              })}\n              key={i}\n              onMouseEnter={() =>\n                onSuggestionItemHover(filteredData.indexOf(suggestion))\n              }\n              onClick={e => {\n                onSuggestionItemClick(null, e)\n              }}\n            >\n              <img\n                src={suggestion.img}\n                alt={suggestion.name}\n                height=\"32\"\n                width=\"32\"\n                className=\"mr-1\"\n              />\n              <span>{suggestion.name}</span>\n            </li>\n          )}\n        />\n    )}}\n\nexport default AutoCompleteRender\n`}\n    </code>\n  </pre>\n)\n\nexport const defaultSuggestionsExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteDefaultSuggestions extends React.Component {\n  state = {\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      }\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete\n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        suggestionLimit={4}\n        defaultSuggestions={true}\n      />\n    )}}\n\nexport default AutoCompleteDefaultSuggestions\n`}\n    </code>\n  </pre>\n)\n\nexport const searchLimitExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteSearchLimit extends React.Component {\n  state = {\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      }\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete\n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        suggestionLimit={2}\n      />\n    )}}\n\nexport default AutoCompleteSearchLimit\n`}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { basicExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteBasic extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      },\n      {\n        title: \"Vue.js\"\n      },\n      {\n        title: \"HTML\"\n      },\n      {\n        title: \"CSS\"\n      },\n      {\n        title: \"SCSS\"\n      },\n      {\n        title: \"PHP\"\n      },\n      {\n        title: \"Laravel\"\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Basic</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={4}\n                  placeholder=\"Type 'a'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {basicExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteBasic\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport axios from \"axios\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { ajaxExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteAjax extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: []\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/autocomplete/data\")\n      .then(response =>\n        this.setState({ suggestions: response.data.autoComplete })\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Ajax</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={4}\n                  placeholder = \"Search for any of the top 250 IMDB movies\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {ajaxExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteAjax\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { sectionExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteSections extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        groupTitle: \"1970s\",\n        data: [\n          {\n            title: \"C\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"1980s\",\n        data: [\n          {\n            title: \"C++\"\n          },\n          {\n            title: \"Perl\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"1990s\",\n        data: [\n          {\n            title: \"Haskell\"\n          },\n          {\n            title: \"Python\"\n          },\n          {\n            title: \"Java\"\n          },\n          {\n            title: \"Javascript\"\n          },\n          {\n            title: \"PHP\"\n          },\n          {\n            title: \"Ruby\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"2000s\",\n        data: [\n          {\n            title: \"C#\"\n          },\n          {\n            title: \"Scala\"\n          },\n          {\n            title: \"Clojure\"\n          },\n          {\n            title: \"Go\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"2010s\",\n        data: [\n          {\n            title: \"Elm\"\n          }\n        ]\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Sections</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  filterHeaderKey=\"groupTitle\"\n                  grouped={true}\n                  placeholder=\"Type 'c'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {sectionExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteSections\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport img1 from \"../../../assets/img/portrait/small/avatar-s-1.jpg\"\nimport img2 from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\nimport img3 from \"../../../assets/img/portrait/small/avatar-s-3.jpg\"\nimport img4 from \"../../../assets/img/portrait/small/avatar-s-4.jpg\"\nimport img5 from \"../../../assets/img/portrait/small/avatar-s-5.jpg\"\nimport img6 from \"../../../assets/img/portrait/small/avatar-s-6.jpg\"\nimport { customRenderExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteRender extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        name: \"Jake Shelton\",\n        img: img1\n      },\n      {\n        name: \"Edith Baldwin\",\n        img: img2\n      },\n      {\n        name: \"Jennifer Wolfe\",\n        img: img3\n      },\n      {\n        name: \"Emily Washington\",\n        img: img4\n      },\n      {\n        name: \"Heather Green\",\n        img: img6\n      },\n      {\n        name: \"Brian Moore\",\n        img: img5\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Custom Render</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"name\"\n                  placeholder=\"Type 'a'\"\n                  customRender={(\n                    suggestion,\n                    i,\n                    filteredData,\n                    activeSuggestion,\n                    onSuggestionItemClick,\n                    onSuggestionItemHover\n                  ) => (\n                    <li\n                      className={classnames(\"suggestion-item\", {\n                        active:\n                          filteredData.indexOf(suggestion) === activeSuggestion\n                      })}\n                      key={i}\n                      onMouseEnter={() =>\n                        onSuggestionItemHover(filteredData.indexOf(suggestion))\n                      }\n                      onClick={e => {\n                        onSuggestionItemClick(null, e)\n                      }}\n                    >\n                      <img\n                        src={suggestion.img}\n                        alt={suggestion.name}\n                        height=\"32\"\n                        width=\"32\"\n                        className=\"mr-1\"\n                      />\n                      <span>{suggestion.name}</span>\n                    </li>\n                  )}\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {customRenderExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteRender\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { defaultSuggestionsExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteDefaultSuggestions extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      },\n      {\n        title: \"Vue.js\"\n      },\n      {\n        title: \"HTML\"\n      },\n      {\n        title: \"CSS\"\n      },\n      {\n        title: \"SCSS\"\n      },\n      {\n        title: \"PHP\"\n      },\n      {\n        title: \"Laravel\"\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Default Suggestions</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={4}\n                  defaultSuggestions={true}\n                  placeholder=\"Type 'a'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {defaultSuggestionsExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteDefaultSuggestions\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { searchLimitExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteSearchLimit extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      },\n      {\n        title: \"Vue.js\"\n      },\n      {\n        title: \"HTML\"\n      },\n      {\n        title: \"CSS\"\n      },\n      {\n        title: \"SCSS\"\n      },\n      {\n        title: \"PHP\"\n      },\n      {\n        title: \"Laravel\"\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card className=\"mb-sm-0 mb-5\">\n          <CardHeader>\n            <CardTitle>Search Limit</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}>\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}>\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody className=\"pb-sm-2 pb-5\">\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={2}\n                  placeholder=\"Type 'a'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {searchLimitExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteSearchLimit\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport AutoCompleteBasic from \"./AutoCompleteBasic\"\nimport AutoCompleteAjax from \"./AutoCompleteAjax\"\nimport AutoCompleteSections from \"./AutoCompleteSections\"\nimport AutoCompleteRender from \"./AutoCompleteRender\"\nimport AutoCompleteSuggestions from \"./AutoCompleteSuggestions\"\nimport AutoCompleteSearchLimit from \"./AutoCompleteLimit\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass AutoComplete extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Auto Complete\"\n          breadCrumbParent=\"Extra Components\"\n          breadCrumbActive=\"Auto Complete\"\n        />\n        <Row>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteBasic />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteSections />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteAjax />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteRender />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteSuggestions />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteSearchLimit />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoComplete\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;"],"sourceRoot":""}