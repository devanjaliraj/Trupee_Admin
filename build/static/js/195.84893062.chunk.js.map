{"version":3,"sources":["views/apps/script/ScriptList.js"],"names":["ScriptList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","script_name","script_type","value","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","id","console","log","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/195.84893062.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n// import axios from \"axios\";\nimport axiosConfig from \"../../../axiosConfig\";\n// import { history } from \"../../../history\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport { Route } from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass ScriptList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Script Name\",\n        field: \"script_name\",\n        width: 220,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.script_name}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Entry Script\",\n        field: \"script_type\",\n        width: 220,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.script_type}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 220,\n        cellRendererFramework: (params) => {\n          return params.value === \"Active\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Deactive\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 200,\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(`/app/script/editScript/${params.data._id}`)\n                    }\n                  />\n                )}\n              />\n\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    await axiosConfig.get(\"/getScript\").then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/deletescript/${id}`).then((response) => {\n      console.log(response);\n    });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\"></Col>\n        <Col sm=\"12\">\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 col-sm-6 className=\"float-left\">\n                  Script List\n                </h1>\n              </Col>\n            </Row>\n            <Col className=\"pt-4\">\n              <Route\n                render={({ history }) => (\n                  <Button\n                    className=\" btn btn-success float-right\"\n                    onClick={() => history.push(\"/app/script/addScript\")}\n                  >\n                    Add Script\n                  </Button>\n                )}\n              />\n            </Col>\n            <CardBody className=\"py-0\">\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                              (this.state.getPageSize - 1)}{\" \"}\n                          -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                          0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                          of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={(e) =>\n                            this.updateSearchQuery(e.target.value)\n                          }\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                        </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {(context) => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default ScriptList;\n"],"sourceRoot":""}