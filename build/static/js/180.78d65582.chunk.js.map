{"version":3,"sources":["views/apps/feedback/FeedBackList.js"],"names":["FeedBackList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRendererFramework","params","className","data","desc","userid","fullname","mobile","script_type","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","headers","localStorage","getItem","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/180.78d65582.chunk.js","sourcesContent":["// // import React from \"react\";\n// // import {\n// //   Col,\n// //   Row,\n// //   Card,\n// //   CardBody,\n// //   Input,\n// //   Button,\n// //   UncontrolledDropdown,\n// //   DropdownMenu,\n// //   DropdownItem,\n// //   DropdownToggle,\n// // } from \"reactstrap\";\n// // import { Route } from \"react-router-dom\";\n// // import { AgGridReact } from \"ag-grid-react\";\n// // import { ContextLayout } from \"../../../utility/context/Layout\";\n// // import { ChevronDown, Trash2, Edit } from \"react-feather\";\n// // import axiosConfig from \"../../../axiosConfig\";\n// // import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// // // import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\n// // class FeedBackList extends React.Component {\n// //   state = {\n// //     rowData: [],\n// //     paginationPageSize: 20,\n// //     currenPageSize: \"\",\n// //     getPageSize: \"\",\n// //     defaultColDef: {\n// //       sortable: true,\n// //       editable: true,\n// //       resizable: true,\n// //       suppressMenu: true,\n// //     },\n\n// //     columnDefs: [\n// //       {\n// //         headerName: \"Descripiton\",\n// //         field: \"desc\",\n\n// //         width: 220,\n// //         // pinned: window.innerWidth > 992 ? \"left\" : false,\n// //         cellRendererFramework: (params) => {\n// //           return (\n// //             <div className=\"d-flex align-items-center cursor-pointer\">\n// //               <span>{params.data.desc}</span>\n// //             </div>\n// //           );\n// //         },\n// //       },\n// //       {\n// //         headerName: \"User Name\",\n// //         field: \"fullname\",\n\n// //         width: 220,\n\n// //         cellRendererFramework: (params) => {\n// //           return (\n// //             <div className=\"d-flex align-items-center cursor-pointer\">\n// //               <span>{params.data.userid.fullname}</span>\n// //             </div>\n// //           );\n// //         },\n// //       },\n// //       {\n// //         headerName: \"Mobile\",\n// //         field: \"mobile\",\n\n// //         width: 220,\n\n// //         cellRendererFramework: (params) => {\n// //           return (\n// //             <div className=\"d-flex align-items-center cursor-pointer\">\n// //               <span>{params.data.userid.mobile}</span>\n// //             </div>\n// //           );\n// //         },\n// //       },\n// //       {\n// //         headerName: \"Script Type\",\n// //         field: \"script_type\",\n\n// //         width: 220,\n\n// //         cellRendererFramework: (params) => {\n// //           return (\n// //             <div className=\"d-flex align-items-center cursor-pointer\">\n// //               <span>{params.data.script_type.script_type}</span>\n// //             </div>\n// //           );\n// //         },\n// //       },\n// //       {\n// //         headerName: \"Actions\",\n// //         field: \"sortorder\",\n// //         width: 200,\n// //         // pinned: window.innerWidth > 992 ? \"right\" : false,\n// //         cellRendererFramework: (params) => {\n// //           return (\n// //             <div className=\"actions cursor-pointer\">\n// //               {/* <Route\n// //                 render={({ history }) => (\n// //                   <Edit\n// //                     className=\"mr-50\"\n// //                     size=\"25px\"\n// //                     color=\"blue\"\n// //                     onClick={() =>\n// //                       history.push(\n\n// //                         `/app/about/EditAboutUs/${params.data._id}`\n// //                       )\n// //                     }\n// //                   />\n// //                 )}\n// //               /> */}\n\n// //               <Trash2\n// //                 className=\"mr-50\"\n// //                 size=\"25px\"\n// //                 color=\"red\"\n// //                 onClick={() => {\n// //                   let selectedData = this.gridApi.getSelectedRows();\n// //                   this.runthisfunction(params.data._id);\n// //                   this.gridApi.updateRowData({ remove: selectedData });\n// //                 }}\n// //               />\n// //             </div>\n// //           );\n// //         },\n// //       },\n// //     ],\n// //   };\n// //   componentDidMount() {\n// //     axiosConfig\n// //       .get(`/getFeedback`)\n// //       .then((response) => {\n// //         let rowData = response.data.data;\n// //         JSON.stringify(rowData);\n// //         this.setState({ rowData });\n// //       })\n// //       .catch((error) => {\n// //         console.log(error.response);\n// //       });\n// //   }\n// //   async runthisfunction(id) {\n// //     console.log(id);\n// //     await axiosConfig\n// //       .get(`/admin/deletenotification/${id}`)\n// //       .then((response) => {\n// //         console.log(response);\n// //       });\n// //   }\n\n// //   onGridReady = (params) => {\n// //     this.gridApi = params.api;\n// //     this.gridColumnApi = params.columnApi;\n// //     this.setState({\n// //       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n// //       getPageSize: this.gridApi.paginationGetPageSize(),\n// //       totalPages: this.gridApi.paginationGetTotalPages(),\n// //     });\n// //   };\n\n// //   updateSearchQuery = (val) => {\n// //     this.gridApi.setQuickFilter(val);\n// //   };\n\n// //   filterSize = (val) => {\n// //     if (this.gridApi) {\n// //       this.gridApi.paginationSetPageSize(Number(val));\n// //       this.setState({\n// //         currenPageSize: val,\n// //         getPageSize: val,\n// //       });\n// //     }\n// //   };\n\n//   render() {\n//     const { rowData, columnDefs, defaultColDef } = this.state;\n//     return (\n//       <React.Fragment>\n//         {/* <Breadcrumbs\n//           breadCrumbTitle=\"Notification\"\n//           breadCrumbParent=\"Forms & Tables\"\n//           breadCrumbActive=\"Notification List\"/> */}\n//         <Card className=\"overflow-hidden agGrid-card\">\n//           <Row className=\"m-2\">\n//             <Col>\n//               <h1 sm=\"6\" className=\"float-left\">\n//                 FeedBack List\n//               </h1>\n//             </Col>\n//             {/* <Col>\n//               <Route\n//                 render={({ history }) => (\n//                   <Button\n//                     className=\" btn btn-danger float-right\"\n//                     onClick={() =>\n//                       history.push(\"/app/notification/Addnotification\")\n//                     }\n//                   >\n//                     Add Notification\n//                   </Button>\n//                 )}\n//               />\n//             </Col> */}\n//           </Row>\n//           <CardBody className=\"py-0\">\n//             {this.state.rowData === null ? null : (\n//               <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n//                 <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n//                   <div className=\"mb-1\">\n//                     <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n//                       <DropdownToggle tag=\"div\">\n//                         {this.gridApi\n//                           ? this.state.currenPageSize\n//                           : \"\" * this.state.getPageSize -\n//                             (this.state.getPageSize - 1)}{\" \"}\n//                         -{\" \"}\n//                         {this.state.rowData.length -\n//                           this.state.currenPageSize * this.state.getPageSize >\n//                         0\n//                           ? this.state.currenPageSize * this.state.getPageSize\n//                           : this.state.rowData.length}{\" \"}\n//                         of {this.state.rowData.length}\n//                         <ChevronDown className=\"ml-50\" size={15} />\n//                       </DropdownToggle>\n//                       <DropdownMenu right>\n//                         <DropdownItem\n//                           tag=\"div\"\n//                           onClick={() => this.filterSize(20)}\n//                         >\n//                           20\n//                         </DropdownItem>\n//                         <DropdownItem\n//                           tag=\"div\"\n//                           onClick={() => this.filterSize(50)}\n//                         >\n//                           50\n//                         </DropdownItem>\n//                         <DropdownItem\n//                           tag=\"div\"\n//                           onClick={() => this.filterSize(100)}\n//                         >\n//                           100\n//                         </DropdownItem>\n//                         <DropdownItem\n//                           tag=\"div\"\n//                           onClick={() => this.filterSize(134)}\n//                         >\n//                           134\n//                         </DropdownItem>\n//                       </DropdownMenu>\n//                     </UncontrolledDropdown>\n//                   </div>\n//                   <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n//                     <div className=\"table-input mr-1\">\n//                       <Input\n//                         placeholder=\"search...\"\n//                         onChange={(e) => this.updateSearchQuery(e.target.value)}\n//                         value={this.state.value}\n//                       />\n//                     </div>\n//                     <div className=\"export-btn\">\n//                       <Button.Ripple\n//                         color=\"primary\"\n//                         onClick={() => this.gridApi.exportDataAsCsv()}\n//                       >\n//                         Export as CSV\n//                       </Button.Ripple>\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <ContextLayout.Consumer>\n//                   {(context) => (\n//                     <AgGridReact\n//                       gridOptions={{}}\n//                       rowSelection=\"multiple\"\n//                       defaultColDef={defaultColDef}\n//                       columnDefs={columnDefs}\n//                       rowData={rowData}\n//                       onGridReady={this.onGridReady}\n//                       colResizeDefault={\"shift\"}\n//                       animateRows={true}\n//                       floatingFilter={true}\n//                       pagination={true}\n//                       paginationPageSize={this.state.paginationPageSize}\n//                       pivotPanelShow=\"always\"\n//                       enableRtl={context.state.direction === \"rtl\"}\n//                     />\n//                   )}\n//                 </ContextLayout.Consumer>\n//               </div>\n//             )}\n//           </CardBody>\n//         </Card>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default FeedBackList;\nimport React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../history\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nclass FeedBackList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n      {\n        headerName: \"Descripiton\",\n        field: \"desc\",\n\n        width: 220,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"User Name\",\n        field: \"fullname\",\n\n        width: 220,\n\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid.fullname}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Mobile\",\n        field: \"mobile\",\n\n        width: 220,\n\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid.mobile}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Script Type\",\n        field: \"script_type\",\n\n        width: 220,\n\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.script_type.script_type}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 200,\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              {/* <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(\n                        \n                        `/app/about/EditAboutUs/${params.data._id}`\n                      )\n                    }\n                  />\n                )}\n              /> */}\n\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  async componentDidMount() {\n    await axiosConfig\n      .get(\"/getFeedback\", {\n        headers: {\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\n        },\n      })\n      .then((response) => {\n        const rowData = response.data.data;\n        console.log(rowData);\n        this.setState({ rowData });\n      });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/dltFeedback/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    FeedBack List\n                  </h1>\n                </Col>\n                {/* <Col>\n                  <Button\n                    className=\" btn btn-danger float-right\"\n                    onClick={() => history.push(\"/app/size/add\")}\n                  >\n                    Add FeedBack\n                  </Button>\n                </Col> */}\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\nexport default FeedBackList;\n"],"sourceRoot":""}