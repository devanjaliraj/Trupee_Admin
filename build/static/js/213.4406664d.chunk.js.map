{"version":3,"sources":["views/apps/users/UsersList.js"],"names":["UsersList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","userid","fullname","mobile","email","address","city","planId","pack_name","date","expdate","value","status","pinned","window","innerWidth","render","history","color","size","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","id","console","log","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/213.4406664d.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n// import axios from \"axios\";\nimport axiosConfig from \"../../../axiosConfig\";\n// import { history } from \"../../../history\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown, Trash2, Eye, Edit } from \"react-feather\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport { Route } from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass UsersList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"First Name\",\n        field: \"fullname\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid.fullname}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Mobile\",\n        field: \"mobile\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid.mobile}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Email ID\",\n        field: \"email\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid.email}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Address\",\n        field: \"address\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid.address}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"City\",\n        field: \"city\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid.city}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Membership plan\",\n        field: \"pack_name\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.planId.pack_name}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Start Date\",\n        field: \"date\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              {/* <span>{moment(params.data.createdAt).format(\"ll\")} </span> */}\n              <span>{params.data.date}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Expiry Date\",\n        field: \"expdate\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.expdate}</span>\n              {/* <span>{moment(params.data.updatedAt).format(\"ll\")} </span> */}\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return params.value === \"Active\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Deactive\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 120,\n        pinned: window.innerWidth > 992 ? \"right\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Route\n                render={({ history }) => (\n                  <Eye\n                    className=\"mr-50\"\n                    color=\"green\"\n                    size={20}\n                    onClick={() =>\n                      history.push(`/app/users/viewUsers/${params.data._id}`)\n                    }\n                  />\n                )}\n              />\n              <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"20px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(`/app/users/editUsers/${params.data._id}`)\n                    }\n                  />\n                )}\n              />\n\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    await axiosConfig.get(\"/allmembership\").then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/dlt_membership/${id}`).then((response) => {\n      console.log(response);\n    });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\"></Col>\n        <Col sm=\"12\">\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 col-sm-6 className=\"float-left\">\n                  Users List\n                </h1>\n              </Col>\n            </Row>\n\n            <CardBody className=\"py-0\">\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                              (this.state.getPageSize - 1)}{\" \"}\n                          -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                          0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                          of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={(e) =>\n                            this.updateSearchQuery(e.target.value)\n                          }\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                        </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {(context) => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default UsersList;\n\n// import React from \"react\";\n// import {\n//   Card,\n//   CardBody,\n//   Input,\n//   Row,\n//   Col,\n//   Button,\n//   UncontrolledDropdown,\n//   DropdownMenu,\n//   DropdownItem,\n//   DropdownToggle,\n// } from \"reactstrap\";\n// import axiosConfig from \"../../../axiosConfig\";\n// import { ContextLayout } from \"../../../utility/context/Layout\";\n// import { AgGridReact } from \"ag-grid-react\";\n// import { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n// //import classnames from \"classnames\";\n// import { history } from \"../../../history\";\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// import \"../../../assets/scss/pages/users.scss\";\n// class SizeList extends React.Component {\n//   state = {\n//     rowData: [],\n//     paginationPageSize: 20,\n//     currenPageSize: \"\",\n//     getPageSize: \"\",\n//     defaultColDef: {\n//       sortable: true,\n//       editable: true,\n//       resizable: true,\n//       suppressMenu: true,\n//     },\n\n//     columnDefs: [\n//       {\n//         headerName: \"S.No\",\n//         valueGetter: \"node.rowIndex + 1\",\n//         field: \"node.rowIndex + 1\",\n//         width: 150,\n//         filter: true,\n//         // checkboxSelection: true,\n//         // headerCheckboxSelectionFilteredOnly: true,\n//         // headerCheckboxSelection: true,\n//       },\n//       {\n//         headerName: \"Size \",\n//         field: \"sizeName\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.sizeName}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Actions\",\n//         field: \"sortorder\",\n//         // field: \"transactions\",\n//         width: 150,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div className=\"actions cursor-pointer\">\n//               <Edit\n//                 className=\"mr-50\"\n//                 color=\"blue\"\n//                 size={20}\n//                 onClick={() =>\n//                   history.push(`/app/size/editSize/${params.data._id}`)\n//                 }\n//               />\n//               <Trash2\n//                 size={20}\n//                 color=\"red\"\n//                 onClick={() => {\n//                   let selectedData = this.gridApi.getSelectedRows();\n//                   this.runthisfunction(params.data._id);\n//                   this.gridApi.updateRowData({ remove: selectedData });\n//                 }}\n//               />\n//             </div>\n//           );\n//         },\n//       },\n//     ],\n//   };\n\n//   async componentDidMount() {\n//     await axiosConfig\n//       .get(\"/getsizebyseller\", {\n//         headers: {\n//           \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\n//         },\n//       })\n//       .then((response) => {\n//         const rowData = response.data.data;\n//         console.log(rowData);\n//         this.setState({ rowData });\n//       });\n//   }\n//   async runthisfunction(id) {\n//     console.log(id);\n//     await axiosConfig.get(`/deleteSize/${id}`).then(\n//       (response) => {\n//         console.log(response);\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n//   }\n//   onGridReady = (params) => {\n//     this.gridApi = params.api;\n//     this.gridColumnApi = params.columnApi;\n//     this.setState({\n//       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n//       getPageSize: this.gridApi.paginationGetPageSize(),\n//       totalPages: this.gridApi.paginationGetTotalPages(),\n//     });\n//   };\n\n//   updateSearchQuery = (val) => {\n//     this.gridApi.setQuickFilter(val);\n//   };\n\n//   filterSize = (val) => {\n//     if (this.gridApi) {\n//       this.gridApi.paginationSetPageSize(Number(val));\n//       this.setState({\n//         currenPageSize: val,\n//         getPageSize: val,\n//       });\n//     }\n//   };\n\n//   render() {\n//     const { rowData, columnDefs, defaultColDef } = this.state;\n//     return (\n//       console.log(rowData),\n//       (\n//         <Row className=\"app-user-list\">\n//           <Col sm=\"12\"></Col>\n//           <Col sm=\"12\">\n//             <Card>\n//               <Row className=\"m-2\">\n//                 <Col>\n//                   <h1 sm=\"6\" className=\"float-left\">\n//                     Size List\n//                   </h1>\n//                 </Col>\n//                 <Col>\n//                   <Button\n//                     className=\" btn btn-danger float-right\"\n//                     onClick={() => history.push(\"/app/size/addSize\")}\n//                   >\n//                     Add Size\n//                   </Button>\n//                 </Col>\n//               </Row>\n//               <CardBody>\n//                 {this.state.rowData === null ? null : (\n//                   <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n//                     <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n//                       <div className=\"mb-1\">\n//                         <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n//                           <DropdownToggle tag=\"div\">\n//                             {this.gridApi\n//                               ? this.state.currenPageSize\n//                               : \"\" * this.state.getPageSize -\n//                                 (this.state.getPageSize - 1)}{\" \"}\n//                             -{\" \"}\n//                             {this.state.rowData.length -\n//                               this.state.currenPageSize *\n//                                 this.state.getPageSize >\n//                             0\n//                               ? this.state.currenPageSize *\n//                                 this.state.getPageSize\n//                               : this.state.rowData.length}{\" \"}\n//                             of {this.state.rowData.length}\n//                             <ChevronDown className=\"ml-50\" size={15} />\n//                           </DropdownToggle>\n//                           <DropdownMenu right>\n//                             <DropdownItem\n//                               tag=\"div\"\n//                               onClick={() => this.filterSize(20)}\n//                             >\n//                               20\n//                             </DropdownItem>\n//                             <DropdownItem\n//                               tag=\"div\"\n//                               onClick={() => this.filterSize(50)}\n//                             >\n//                               50\n//                             </DropdownItem>\n//                             <DropdownItem\n//                               tag=\"div\"\n//                               onClick={() => this.filterSize(100)}\n//                             >\n//                               100\n//                             </DropdownItem>\n//                             <DropdownItem\n//                               tag=\"div\"\n//                               onClick={() => this.filterSize(134)}\n//                             >\n//                               134\n//                             </DropdownItem>\n//                           </DropdownMenu>\n//                         </UncontrolledDropdown>\n//                       </div>\n//                       <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n//                         <div className=\"table-input mr-1\">\n//                           <Input\n//                             placeholder=\"search...\"\n//                             onChange={(e) =>\n//                               this.updateSearchQuery(e.target.value)\n//                             }\n//                             value={this.state.value}\n//                           />\n//                         </div>\n//                         <div className=\"export-btn\">\n//                           <Button.Ripple\n//                             color=\"primary\"\n//                             onClick={() => this.gridApi.exportDataAsCsv()}\n//                           >\n//                             Export as CSV\n//                           </Button.Ripple>\n//                         </div>\n//                       </div>\n//                     </div>\n//                     <ContextLayout.Consumer>\n//                       {(context) => (\n//                         <AgGridReact\n//                           gridOptions={{}}\n//                           rowSelection=\"multiple\"\n//                           defaultColDef={defaultColDef}\n//                           columnDefs={columnDefs}\n//                           rowData={rowData}\n//                           onGridReady={this.onGridReady}\n//                           colResizeDefault={\"shift\"}\n//                           animateRows={true}\n//                           floatingFilter={false}\n//                           pagination={true}\n//                           paginationPageSize={this.state.paginationPageSize}\n//                           pivotPanelShow=\"always\"\n//                           enableRtl={context.state.direction === \"rtl\"}\n//                         />\n//                       )}\n//                     </ContextLayout.Consumer>\n//                   </div>\n//                 )}\n//               </CardBody>\n//             </Card>\n//           </Col>\n//         </Row>\n//       )\n//     );\n//   }\n// }\n// export default SizeList;\n"],"sourceRoot":""}