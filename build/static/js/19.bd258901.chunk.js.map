{"version":3,"sources":["components/reactstrap/collapse/Accordion.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Collapse.js","components/reactstrap/collapse/CollapseSourceCode.js"],"names":["collapseItems","id","title","content","Accordion","state","activeTab","collapseID","status","toggleTab","tab","setState","toggleCollapse","prevState","onEntered","onEntering","onExited","onExiting","accordionItems","map","collapseItem","key","onClick","className","classnames","closing","opening","size","isOpen","Fragment","tabs","active","this","tabId","accordion","React","Component","TabContext","createContext","_excluded","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tag","tagPropType","cssModule","object","Nav","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","TabContent","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","TabPane","getClasses","Consumer","_ref","_transitionStatusToCl","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","Transition","children","arrayOf","node","innerRef","func","appear","enter","exit","timeout","TransitionTimeouts","Collapse","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","height","name","bind","_assertThisInitialized","_proto","isAppearing","onExit","offsetHeight","_this2","otherProps","transitionProps","pick","TransitionPropTypeKeys","childProps","in","collapseClass","getTransitionClass","style","ref","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault"],"mappings":"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","file":"static/js/19.bd258901.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordion } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              You may want to open one item at a time for that you can use\r\n              accordion.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordion}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Accordion\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar _transitionStatusToCl;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread(_objectSpread({}, Transition.propTypes), {}, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread(_objectSpread({}, childProps.style), style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import React from \"react\"\r\n\r\nexport const accordion = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Accordion`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionShadow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionShadowItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className={classnames({\r\n                open: collapseItem.id === this.state.collapseID\r\n              })}\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\r\n      {accordionShadowItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionBorder = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionBorderItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className=\"collapse-border-item\"\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\r\n      {accordionBorderItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionMargin = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionMarginItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionMarginItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionHover = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionHoverItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionHoverItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseUncontrolled = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {UncontrolledCollaspe} from \"reactstrap\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        <Card>\r\n          <CardHeader id=\"item-1\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 1\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-1\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-2\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 2\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-2\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-3\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 3\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-3\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-4\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 4\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-4\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collaspe} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n\r\n  state = {\r\n    collapseItems: []\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={this.onEntering}\r\n            onEntered={this.onEntered}\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        {renderCollapse}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n"],"sourceRoot":""}