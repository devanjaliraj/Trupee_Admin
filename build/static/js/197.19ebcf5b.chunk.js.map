{"version":3,"sources":["views/apps/showAppre/ShowAppreciation.js"],"names":["ShowAppreciation","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","dealer_name","mobile","render","history","size","color","onClick","push","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","id","console","log","axiosConfig","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/197.19ebcf5b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport axiosConfig from \"../../../axiosConfig\";\n// import { history } from \"../../../history\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport { Route } from \"react-router-dom\";\nclass ShowAppreciation extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Title\",\n        field: \"dealer_name\",\n        width: 180,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.dealer_name}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Descriprion\",\n        field: \"mobile\",\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.mobile}</span>\n            </div>\n          );\n        },\n      },\n      //   {\n      //     headerName: \"Date/Time\",\n      //     field: \"first_name\",\n      //     width: 180,\n      //     cellRendererFramework: (params) => {\n      //       return (\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\n      //           <span>{params.data.master_oil_company?.name}</span>\n      //         </div>\n      //       );\n      //     },\n      //   },\n      //   {\n      //     headerName: \"Email\",\n      //     field: \"email\",\n      //     width: 180,\n      //     cellRendererFramework: (params) => {\n      //       return (\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\n      //           <span>{params.data.email}</span>\n      //         </div>\n      //       );\n      //     },\n      //   },\n\n      {\n        headerName: \"Image\",\n        field: \"state\",\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.state}</span>\n            </div>\n          );\n        },\n      },\n      //   {\n      //     headerName: \"City\",\n      //     field: \"district\",\n      //     width: 180,\n      //     cellRendererFramework: (params) => {\n      //       return (\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\n      //           <span>{params.data.district}</span>\n      //         </div>\n      //       );\n      //     },\n      //   },\n      //   {\n      //     headerName: \"Start Date\",\n      //     field: \"district\",\n      //     width: 180,\n      //     cellRendererFramework: (params) => {\n      //       return (\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\n      //           <span>{params.data.district}</span>\n      //         </div>\n      //       );\n      //     },\n      //   },\n      //   {\n      //     headerName: \"Expiry Date\",\n      //     field: \"district\",\n      //     width: 180,\n      //     cellRendererFramework: (params) => {\n      //       return (\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\n      //           <span>{params.data.district}</span>\n      //         </div>\n      //       );\n      //     },\n      //   },\n      //   // {\n      //   //   headerName: \"Status\",\n      //   //   field: \"userverified\",\n      //   //   // filter: true,\n      //   //   width: 150,\n      //   //   cellRendererFramework: (params) => {\n      //   //     return params.value === \"Active\" ? (\n      //   //       <div className=\"badge badge-pill badge-success\">\n      //   //         {params.data.userverified}\n      //   //       </div>\n      //   //     ) : params.value === \"Inactive\" ? (\n      //   //       <div className=\"badge badge-pill badge-warning\">\n      //   //         {params.data.userverified}\n      //   //       </div>\n      //   //     ) : null;\n      //   //   },\n      //   // },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 180,\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(`/app/showAppre/editShowAppreciation`)\n                    }\n                  />\n                )}\n              />\n\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    await axios.get(\"api/users/list\").then((response) => {\n      let rowData = response.data;\n      this.setState({ rowData });\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig\n      .get(`/dealer/deletedealershipform/${id}`)\n      .then((response) => {\n        console.log(response);\n      });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\"></Col>\n        <Col sm=\"12\">\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 col-sm-6 className=\"float-left\">\n                  Show Appreciation List\n                </h1>\n              </Col>\n            </Row>\n            <Col className=\"pt-4\">\n              <Route\n                render={({ history }) => (\n                  <Button\n                    className=\" btn btn-success float-right\"\n                    onClick={() =>\n                      history.push(\"/app/showAppre/addShowAppreciation\")\n                    }\n                  >\n                    Edit Show Appreciation\n                  </Button>\n                )}\n              />\n            </Col>\n\n            <CardBody className=\"py-0\">\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                              (this.state.getPageSize - 1)}{\" \"}\n                          -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                          0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                          of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={(e) =>\n                            this.updateSearchQuery(e.target.value)\n                          }\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                        </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {(context) => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default ShowAppreciation;\n"],"sourceRoot":""}