{"version":3,"sources":["views/apps/trade/AllTradeList.js"],"names":["AllTradeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","pinned","window","innerWidth","render","history","size","color","onClick","push","data","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/200.d3cb2174.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../history\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\n\nclass AllTradeList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n\n      {\n        headerName: \"Type Of Script\",\n        field: \"equity_script\",\n        width: 140,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex  align-items-center cursor-pointer\">\n              {/* <span>{params.data.equity_script}</span> */}\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Date/Time\",\n        field: \"script_type\",\n        width: 140,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex  align-items-center cursor-pointer\">\n              {/* <span>{params.data.script_name?.script_type}</span> */}\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Trade\",\n        field: \"script_name\",\n        width: 140,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              {/* <span>{params.data.script_name?.script_name}</span> */}\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Message\",\n        field: \"call_type\",\n        width: 140,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              {/* <span>{params.data.call_type}</span> */}\n            </div>\n          );\n        },\n      },\n      // {\n      //   headerName: \"Active Value\",\n      //   field: \"active_value\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.active_value}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \" SL\",\n      //   field: \"SL\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.SL}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"T₹ 1\",\n      //   field: \"T1\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.T1}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"T₹ 2\",\n      //   field: \"T2\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.T2}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"T₹ 3\",\n      //   field: \"T3\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.T3}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"T₹ 4\",\n      //   field: \"T4\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.T4}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"IS Range\",\n      //   field: \"T4\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         {/* <span>{params.data.T4}</span> */}\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      // {\n      //   headerName: \"Quantity\",\n      //   field: \"qty\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.qty}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"Investment Amount\",\n      //   field: \"investment_amt\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.investment_amt}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"Intraday\",\n      //   field: \"intraday\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.intraday}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      // {\n      //   headerName: \"Number Of Lots\",\n      //   field: \"no_of_lots\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.no_of_lots}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"SL Type\",\n      //   field: \"sl_type\",\n      //   filter: true,\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return params.value === \"true\" ? (\n      //       <div className=\"badge badge-pill badge-success\">\n      //         {params.data.sl_type}\n      //       </div>\n      //     ) : params.value === \"False\" ? (\n      //       <div className=\"badge badge-pill badge-warning\">\n      //         {params.data.sl_type}\n      //       </div>\n      //     ) : null;\n      //   },\n      // },\n      // {\n      //   headerName: \"T1 Type\",\n      //   field: \"t1_type\",\n      //   filter: true,\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return params.value === \"true\" ? (\n      //       <div className=\"badge badge-pill badge-success\">\n      //         {params.data.t1_type}\n      //       </div>\n      //     ) : params.value === \"Inactive\" ? (\n      //       <div className=\"badge badge-pill badge-warning\">\n      //         {params.data.t1_type}\n      //       </div>\n      //     ) : null;\n      //   },\n      // },\n      // {\n      //   headerName: \"T2 Type\",\n      //   field: \"t2_type\",\n      //   filter: true,\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return params.value === \"true\" ? (\n      //       <div className=\"badge badge-pill badge-success\">\n      //         {params.data.t2_type}\n      //       </div>\n      //     ) : params.value === \"Inactive\" ? (\n      //       <div className=\"badge badge-pill badge-warning\">\n      //         {params.data.t2_type}\n      //       </div>\n      //     ) : null;\n      //   },\n      // },\n      // {\n      //   headerName: \"T3 Type\",\n      //   field: \"t3_type\",\n      //   filter: true,\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return params.value === \"true\" ? (\n      //       <div className=\"badge badge-pill badge-success\">\n      //         {params.data.t3_type}\n      //       </div>\n      //     ) : params.value === \"Inactive\" ? (\n      //       <div className=\"badge badge-pill badge-warning\">\n      //         {params.data.t3_type}\n      //       </div>\n      //     ) : null;\n      //   },\n      // },\n      // {\n      //   headerName: \"T4 Type\",\n      //   field: \"t4_type\",\n      //   filter: true,\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return params.value === \"true\" ? (\n      //       <div className=\"badge badge-pill badge-success\">\n      //         {params.data.t4_type}\n      //       </div>\n      //     ) : params.value === \"Inactive\" ? (\n      //       <div className=\"badge badge-pill badge-warning\">\n      //         {params.data.t4_type}\n      //       </div>\n      //     ) : null;\n      //   },\n      // },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        // field: \"transactions\",\n        width: 150,\n        pinned: window.innerWidth > 992 ? \"right\" : false,\n\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              {/* <Eye\n                className=\"mr-50\"\n                color=\"green\"\n                size={20}\n                onClick={() =>\n                  history.push(`/app/size/viewSize/${params.data._id}`)\n                }\n              /> */}\n               <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(`/app/trade/editAllTrade/${params.data._id}`)\n                    }\n                  />\n                )}\n              /> \n\n              <Trash2\n                size={20}\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  async componentDidMount() {\n    await axiosConfig.get(`/tradelist`).then((response) => {\n      const rowData = response.data.data;\n      console.log(rowData);\n      this.setState({ rowData });\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/dlt_trade/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                   Trade Notification List\n                  </h1>\n                </Col>\n                <Col className=\"pt-4\">\n                  <Route\n                    render={({ history }) => (\n                      <Button\n                        className=\" btn btn-success float-right\"\n                        onClick={() => history.push(\"/app/trade/addAllTrade\")}\n                      >\n                        Add\n                      </Button>\n                    )}\n                  />\n                </Col>\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\nexport default AllTradeList;\n"],"sourceRoot":""}