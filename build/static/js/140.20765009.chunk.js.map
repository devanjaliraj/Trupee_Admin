{"version":3,"sources":["components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/UncontrolledCollapse.js"],"names":["collapseItems","id","title","content","CollapseDefault","state","activeTab","status","toggleTab","tab","setState","toggleCollapse","collapseID","index","indexOf","items","splice","push","onEntered","includes","onEntering","onExited","onExiting","renderCollapse","map","collapseItem","Card","key","onClick","className","classnames","closing","opening","CardHeader","CardTitle","size","Collapse","isOpen","CardBody","Fragment","Nav","tabs","NavItem","NavLink","active","this","TabContent","TabPane","tabId","collapseDefault","React","Component","CollapseUncontrolled","UncontrolledCollapse","toggler","collapseUncontrolled","AccordionShadow","prevState","accordionShadowItems","open","accordionShadow","AccordionBorder","accordionBorderItems","accordionBorder","AccordionMargin","accordionMarginItems","accordionMargin","AccordionHover","accordionHoverItems","onMouseEnter","accordionHover","Collaspe","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","Accordion","t","n","util","clone","languages","javascript","e","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","join","g","length","o","i","type","tagName","pop","openedBraces","r","Token","hooks","add","language","tokens","omitKeys","propTypes","defaultOpen","PropTypes","bool","string","isRequired","toggleEvents","arrayOf","defaultProps","defaultToggleEvents","_Component","props","_this","call","togglers","removeEventListeners","toggle","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","componentDidMount","findDOMElements","addMultipleEventListeners","componentWillUnmount","_ref","preventDefault","render","createElement","_extends","omit"],"mappings":"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","file":"static/js/140.20765009.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseDefault } from \"./CollapseSourceCode\"\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseItems: [],\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id)\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With basic collapse you can open multiple items at a time. to add\r\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\r\n              collapse cards.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {renderCollapse}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n","import React from \"react\"\r\nimport {\r\n  UncontrolledCollapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Collapse Uncontrolled</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With uncontrolled collapse you don't have to manage state you can\r\n              toggle collapse with <code>id</code> and <code>toggler</code>\r\n              attribute\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  <Card>\r\n                    <CardHeader id=\"item-1\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 1\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-1\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-2\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 2\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-2\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-3\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 3\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-3\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-4\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 4\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-4\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseUncontrolled}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionShadow } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionShadowItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            open: collapseItem.id === this.state.collapseID\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Shadow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              use class <code>.accordion-shadow</code> as a wrapper of your\r\n              accordion/collapse card for shadow.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\r\n                  {accordionShadowItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionShadow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionBorder } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionBorderItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames(\"collapse-border-item\", {\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Border</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-border-item</code> with your collapsible\r\n              card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionBorder}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionMargin } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <div className=\"collapse-margin\" key={collapseItem.id}>\r\n          <Card\r\n            onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            className={classnames({\r\n              \"collapse-collapsed\":\r\n                this.state.status === \"Closed\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              \"collapse-shown\":\r\n                this.state.status === \"Opened\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              closing:\r\n                this.state.status === \"Closing...\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              opening:\r\n                this.state.status === \"Opening...\" &&\r\n                this.state.collapseID === collapseItem.id\r\n            })}\r\n          >\r\n            <CardHeader>\r\n              <CardTitle className=\"lead collapse-title collapsed\">\r\n                {collapseItem.title}\r\n              </CardTitle>\r\n              <ChevronDown size={15} className=\"collapse-icon\" />\r\n            </CardHeader>\r\n            <Collapse\r\n              isOpen={collapseItem.id === this.state.collapseID}\r\n              onEntering={() => this.onEntering(collapseItem.id)}\r\n              onEntered={() => this.onEntered(collapseItem.id)}\r\n              onExiting={() => this.onExiting(collapseItem.id)}\r\n              onExited={() => this.onExited(collapseItem.id)}\r\n            >\r\n              <CardBody>{collapseItem.content}</CardBody>\r\n            </Collapse>\r\n          </Card>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Margin</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-Margin</code> as a wrapper of your\r\n              collapseible card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionMargin}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionHover } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionHoverItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\r\n          key={collapseItem.id}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Hover</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\r\n              <code>mouseEnter</code> instead of <code>onClick</code>\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionHoverItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionHover}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n","import React from \"react\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport CollapseDefault from \"./CollapseDefault\"\r\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\r\nimport Accordion from \"./Accordion\"\r\nimport AccordionShadow from \"./AccordionShadow\"\r\nimport AccordionBorder from \"./AccordionBorder\"\r\nimport AccordionMargin from \"./AccordionMargin\"\r\nimport AccordionHover from \"./AccordionHover\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Collaspe extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Collapse\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Collapse\"\r\n        />\r\n        <Row>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseDefault />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseUncontrolled />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <Accordion />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionShadow />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionBorder />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionMargin />\r\n          </Col>\r\n        </Row>\r\n        <AccordionHover />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Collaspe\r\n","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;"],"sourceRoot":""}