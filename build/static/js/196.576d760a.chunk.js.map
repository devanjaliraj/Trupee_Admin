{"version":3,"sources":["views/apps/scripts/CashEquity.js"],"names":["CashEquityList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","scriptName","value","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","id","console","log","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/196.576d760a.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport {  Edit, Trash2, ChevronDown } from \"react-feather\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\n\nclass CashEquityList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Script Name\",\n        field: \"scriptName\",\n        width: 220,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.scriptName}</span>\n            </div>\n          );\n        },\n      },\n   \n\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return params.value === \"Active\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Deactive\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 200,\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(`/app/scripts/editCash/${params.data._id}`)\n                    }\n                  />\n                )}\n              />\n\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    await axiosConfig.get(\"/getCashScript\").then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/dltCashScript/${id}`).then((response) => {\n      console.log(response);\n    });\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    Cash Equity List\n                  </h1>\n                </Col>\n                <Col className=\"pt-4\">\n                <Route\n                render={({ history }) => (\n                  <Button\n                    className=\" btn btn-success float-right\"\n                    onClick={() => history.push(\"/app/scripts/addCashEquity\")}\n                  >\n                    Add Cash Equity\n                  </Button>\n                )}\n              />\n                       \n                </Col>\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\nexport default CashEquityList;\n"],"sourceRoot":""}