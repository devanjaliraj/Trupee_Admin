{"version":3,"sources":["views/apps/trade/AllTradeList.js"],"names":["AllTradeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","equity_script","active_value","call_type","intraday","SL","T1","T2","T3","T4","qty","qty_of_lots","investment_amt","script_name","color","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","error","this","sm","render","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/149.63fe5997.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Col,\r\n//   Row,\r\n//   Card,\r\n//   CardBody,\r\n//   Input,\r\n//   Button,\r\n//   UncontrolledDropdown,\r\n//   DropdownMenu,\r\n//   DropdownItem,\r\n//   DropdownToggle,\r\n// } from \"reactstrap\";\r\n// import axios from \"axios\";\r\n// import { history } from \"../../../history\";\r\n// import { AgGridReact } from \"ag-grid-react\";\r\n// import { ChevronDown, Trash2, Eye, Edit } from \"react-feather\";\r\n// import { ContextLayout } from \"../../../utility/context/Layout\";\r\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import { Route } from \"react-router-dom\";\r\n// class AllTradeList extends React.Component {\r\n//   state = {\r\n//     rowData: [],\r\n//     paginationPageSize: 20,\r\n//     currenPageSize: \"\",\r\n//     getPageSize: \"\",\r\n//     defaultColDef: {\r\n//       sortable: true,\r\n//       editable: true,\r\n//       resizable: true,\r\n//       suppressMenu: true,\r\n//     },\r\n//     columnDefs: [\r\n//       {\r\n//         headerName: \"Script Name\",\r\n//         field: \"script_name\",\r\n//         width: 140,\r\n//         pinned: window.innerWidth > 992 ? \"left\" : false,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.script_name}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Call Type\",\r\n//         field: \"mobile\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.mobile}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Active Value\",\r\n//         field: \"\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.email}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \" SL\",\r\n//         field: \"master_oil_company\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.master_oil_company}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"T₹ 1\",\r\n//         field: \"location\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.location}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"T₹ 2\",\r\n//         field: \"location\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.location}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"T₹ 3\",\r\n//         field: \"location\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.location}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"T₹ 4\",\r\n//         field: \"location\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.location}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Lots\",\r\n//         field: \"state\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.state}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Quantity\",\r\n//         field: \"state\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.state}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Investment Amount\",\r\n//         field: \"state\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.state}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Lots Price\",\r\n//         field: \"district\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.district}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Inversment Amount\",\r\n//         field: \"district\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.district}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Lots Price\",\r\n//         field: \"district\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.district}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Actions\",\r\n//         field: \"sortorder\",\r\n//         width: 140,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"actions cursor-pointer\">\r\n//               {/* <Eye\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"green\"\r\n//                 onClick={() =>\r\n//                   history.push(`/app/dealer/viewDealer/${params.data._id}`)\r\n//                 }\r\n//               /> */}\r\n//               <Edit\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"blue\"\r\n//                 onClick={() => history.push(`/app/trade/editDealer`)}\r\n//               />\r\n//               <Trash2\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"red\"\r\n//                 onClick={() => {\r\n//                   let selectedData = this.gridApi.getSelectedRows();\r\n//                   this.runthisfunction(params.data._id);\r\n//                   this.gridApi.updateRowData({ remove: selectedData });\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//     ],\r\n//   };\r\n//   async componentDidMount() {\r\n//     await axios\r\n//       .get(\"http://3.108.185.7/nodejs/api/dealer/alldealers\")\r\n//       .then((response) => {\r\n//         const rowData = response.data.data;\r\n//         console.log(rowData);\r\n//         this.setState({ rowData });\r\n//       });\r\n//   }\r\n//   async runthisfunction(id) {\r\n//     console.log(id);\r\n//     await axios\r\n//       .get(`http://3.108.185.7/nodejs/api/dealer/deletedealershipform/${id}`)\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//       });\r\n//   }\r\n//   onGridReady = (params) => {\r\n//     this.gridApi = params.api;\r\n//     this.gridColumnApi = params.columnApi;\r\n//     this.setState({\r\n//       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n//       getPageSize: this.gridApi.paginationGetPageSize(),\r\n//       totalPages: this.gridApi.paginationGetTotalPages(),\r\n//     });\r\n//   };\r\n\r\n//   updateSearchQuery = (val) => {\r\n//     this.gridApi.setQuickFilter(val);\r\n//   };\r\n\r\n//   filterSize = (val) => {\r\n//     if (this.gridApi) {\r\n//       this.gridApi.paginationSetPageSize(Number(val));\r\n//       this.setState({\r\n//         currenPageSize: val,\r\n//         getPageSize: val,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const { rowData, columnDefs, defaultColDef } = this.state;\r\n//     return (\r\n//       <Row className=\"app-user-list\">\r\n//         <Col sm=\"12\"></Col>\r\n//         <Col sm=\"12\">\r\n//           <Card>\r\n//             <Row className=\"m-2\">\r\n//               <Col>\r\n//                 <h1 col-sm-6 className=\"float-left\">\r\n//                   All Trade List\r\n//                 </h1>\r\n//               </Col>\r\n//             </Row>\r\n//             <Col className=\"pt-4\">\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Button\r\n//                     className=\" btn btn-success float-right\"\r\n//                     onClick={() => history.push(\"/app/trade/AddAllTrade\")}\r\n//                   >\r\n//                     Add All Trade\r\n//                   </Button>\r\n//                 )}\r\n//               />\r\n//             </Col>\r\n\r\n//             <CardBody className=\"py-0\">\r\n//               {this.state.rowData === null ? null : (\r\n//                 <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n//                   <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n//                     <div className=\"mb-1\">\r\n//                       <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n//                         <DropdownToggle tag=\"div\">\r\n//                           {this.gridApi\r\n//                             ? this.state.currenPageSize\r\n//                             : \"\" * this.state.getPageSize -\r\n//                               (this.state.getPageSize - 1)}{\" \"}\r\n//                           -{\" \"}\r\n//                           {this.state.rowData.length -\r\n//                             this.state.currenPageSize * this.state.getPageSize >\r\n//                           0\r\n//                             ? this.state.currenPageSize * this.state.getPageSize\r\n//                             : this.state.rowData.length}{\" \"}\r\n//                           of {this.state.rowData.length}\r\n//                           <ChevronDown className=\"ml-50\" size={15} />\r\n//                         </DropdownToggle>\r\n//                         <DropdownMenu right>\r\n//                           <DropdownItem\r\n//                             tag=\"div\"\r\n//                             onClick={() => this.filterSize(20)}\r\n//                           >\r\n//                             20\r\n//                           </DropdownItem>\r\n//                           <DropdownItem\r\n//                             tag=\"div\"\r\n//                             onClick={() => this.filterSize(50)}\r\n//                           >\r\n//                             50\r\n//                           </DropdownItem>\r\n//                           <DropdownItem\r\n//                             tag=\"div\"\r\n//                             onClick={() => this.filterSize(100)}\r\n//                           >\r\n//                             100\r\n//                           </DropdownItem>\r\n//                           <DropdownItem\r\n//                             tag=\"div\"\r\n//                             onClick={() => this.filterSize(134)}\r\n//                           >\r\n//                             134\r\n//                           </DropdownItem>\r\n//                         </DropdownMenu>\r\n//                       </UncontrolledDropdown>\r\n//                     </div>\r\n//                     <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n//                       <div className=\"table-input mr-1\">\r\n//                         <Input\r\n//                           placeholder=\"search...\"\r\n//                           onChange={(e) =>\r\n//                             this.updateSearchQuery(e.target.value)\r\n//                           }\r\n//                           value={this.state.value}\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"export-btn\">\r\n//                         <Button.Ripple\r\n//                           color=\"primary\"\r\n//                           onClick={() => this.gridApi.exportDataAsCsv()}\r\n//                         >\r\n//                           Export as CSV\r\n//                         </Button.Ripple>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                   <ContextLayout.Consumer>\r\n//                     {(context) => (\r\n//                       <AgGridReact\r\n//                         gridOptions={{}}\r\n//                         rowSelection=\"multiple\"\r\n//                         defaultColDef={defaultColDef}\r\n//                         columnDefs={columnDefs}\r\n//                         rowData={rowData}\r\n//                         onGridReady={this.onGridReady}\r\n//                         colResizeDefault={\"shift\"}\r\n//                         animateRows={true}\r\n//                         floatingFilter={true}\r\n//                         pagination={true}\r\n//                         paginationPageSize={this.state.paginationPageSize}\r\n//                         pivotPanelShow=\"always\"\r\n//                         enableRtl={context.state.direction === \"rtl\"}\r\n//                       />\r\n//                     )}\r\n//                   </ContextLayout.Consumer>\r\n//                 </div>\r\n//               )}\r\n//             </CardBody>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     );\r\n//   }\r\n// }\r\n// export default AllTradeList;\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass AllTradeList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Equity Script\",\r\n        field: \"equity_script\",\r\n        width: 140,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex  align-items-center cursor-pointer\">\r\n              <span>{params.data.equity_script}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Active Value\",\r\n        field: \"active_value\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.active_value}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Call Type\",\r\n        field: \"call_type\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.call_type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Intraday\",\r\n        field: \"intraday\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.intraday}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \" SL\",\r\n        field: \"SL\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.SL}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"T₹ 1\",\r\n        field: \"T1\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.T1}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"T₹ 2\",\r\n        field: \"T2\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.T2}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"T₹ 3\",\r\n        field: \"T3\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.T3}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"T₹ 4\",\r\n        field: \"T4\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.T4}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Quantity\",\r\n        field: \"qty\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.qty}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Lots\",\r\n        field: \"qty_of_lots\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.qty_of_lots}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Investment Amount\",\r\n        field: \"investment_amt\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.investment_amt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Script Name\",\r\n        field: \"script_name\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.script_name.script_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        // field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                className=\"mr-50\"\r\n                color=\"green\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/size/viewSize/${params.data._id}`)\r\n                }\r\n              /> */}\r\n              <Edit\r\n                className=\"mr-50\"\r\n                color=\"blue\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/trade/editAllTrade/${params.data._id}`)\r\n                }\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(`/tradelist`).then((response) => {\r\n      const rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/dlt_trade/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    All Trade List\r\n                  </h1>\r\n                </Col>\r\n                <Col className=\"pt-4\">\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\" btn btn-success float-right\"\r\n                        onClick={() => history.push(\"/app/trade/AddAllTrade\")}\r\n                      >\r\n                        Add All Trade\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default AllTradeList;\r\n"],"sourceRoot":""}